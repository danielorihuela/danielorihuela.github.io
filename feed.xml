<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Daniel Orihuela&apos;s Blog</title><description>Dive into the fascinating world of software development, security, and AI with Daniel Orihuela.</description><link>https://danielorihuela.dev/</link><atom:link href="https://danielorihuela.dev/feed.xml" rel="self" type="application/rss+xml"/><item><title>H4ck1ng G00gl3 ep000 challenge 02</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep000ch02/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep000ch02/</guid><description>Hack your way through H4ck1ng G00gl3 ep000 challenge 02. Exploit web vulnerabilities, master path traversal and Perl code injection, and claim victory.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep001 challenge 02</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep001ch02/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep001ch02/</guid><description>Reverse engineer H4ck1ng G00gl3 ep001 challenge 02: analyze executable strings, disassemble code, and execute hidden functions to uncover the flag.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>Cryptopals: Break an ECB encrypted message (hard)</title><link>https://danielorihuela.dev/blog/break-ecb-2/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/break-ecb-2/</guid><description>Learn to break a message encrypted with the ECB block cipher mode (hard exercise).</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep000 challenge 01</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep000ch01/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep000ch01/</guid><description>Think like a hacker to solve H4ck1ng G00gl3 ep000 challenge 01. Use SQL injection to outsmart the AI in this web exploitation adventure.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>Cryptopals: Break a repeating-key XOR message</title><link>https://danielorihuela.dev/blog/break-xor/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/break-xor/</guid><description>Learn to break a message encrypted with the XOR cipher and a repeating key.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep001 challenge 01</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep001ch01/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep001ch01/</guid><description>Reverse engineer your way to solving H4ck1ng G00gl3 ep001 challenge 01. Extract strings, find private keys, and decrypt the flag to crack this challenge.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>Cryptopals: Break an ECB encrypted message (easy)</title><link>https://danielorihuela.dev/blog/break-ecb/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/break-ecb/</guid><description>Learn to break a message encrypted with the ECB block cipher mode (easy exercise).</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>Format string vulnerability</title><link>https://danielorihuela.dev/blog/format_string_vuln/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/format_string_vuln/</guid><description>Learn how format string exploits work and discover preventive measures to safeguard your code against them.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep001 challenge 03</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep001ch03/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep001ch03/</guid><description>Reverse engineer your way through H4ck1ng G00gl3 ep001 challenge 03. Exploit PHP serialization and directory traversal to uncover and decode the flag.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>Deploy blog written with org-mode on GitHub Pages</title><link>https://danielorihuela.dev/blog/deploy-blog-written-with-org-mode-on-github-pages/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/deploy-blog-written-with-org-mode-on-github-pages/</guid><description>Join me on my adventure to crafting a personal blog with Hugo, GitHub Pages, and GitHub Actions. Learn how to use these tools to create and deploy your own site effortlessly.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep002 challenge 01</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep002ch01/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep002ch01/</guid><description>Crack H4ck1ng G00gl3 ep002 challenge 01: decode steganography in an image, use LSB technique and extract hidden messages from SSL certificates.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep002 challenge 03</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep002ch03/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep002ch03/</guid><description>Escape a restricted shell in H4ck1ng G00gl3 ep002 challenge 03. Override builtin functions and use Bash tricks to find and reveal the flag.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep002 challenge 02</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep002ch02/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep002ch02/</guid><description>Explore H4ck1ng G00gl3 ep002 challenge 02: install Timesketch via Docker, analyze logs, and uncover the flag in this thrilling forensics journey.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep003 challenge 01</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep003ch01/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep003ch01/</guid><description>Decode H4ck1ng G00gl3 ep003 challenge 01: navigate restricted shells, extract tokens, and uncover the flag using OAuth 2.0 and JWT.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep003 challenge 02</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep003ch02/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep003ch02/</guid><description>Decode H4ck1ng G00gl3 ep003 challenge 02: use the Konami cheat code, escape a restricted Python shell, and reveal the hidden flag.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep003 challenge 03</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep003ch03/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep003ch03/</guid><description>Hack your way through H4ck1ng G00gl3 ep003 challenge 03. Decompile, modify the apk, and scan the QR code to reveal the hidden flag.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep004 challenge 01</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep004ch01/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep004ch01/</guid><description>Crack H4ck1ng G00gl3 ep004 challenge 01: explore endpoints, use .tar.gz files and dry run features, and trick the system into revealing the flag.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep004 challenge 02</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep004ch02/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep004ch02/</guid><description>Exploit H4ck1ng G00gl3 ep004 challenge 02: find vulnerabilities, bypass string comparison, and reset passwords to log in as &apos;tin&apos; and reveal the flag.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep005 challenge 01</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep005ch01/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep005ch01/</guid><description>Decode H4ck1ng G00gl3 ep005 challenge 01: manipulate binary data, discover hidden drawings, and stitch images together to reveal the final URL.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep004 challenge 03</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep004ch03/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep004ch03/</guid><description>Complete H4ck1ng G00gl3 ep004 challenge 03: Explore hidden tabs, read server-side scripts, and use creative commits to reveal the flag.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep005 challenge 02</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep005ch02/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep005ch02/</guid><description>Crack H4ck1ng G00gl3 ep005 challenge 02: exploit cryptographic vulnerabilities, manipulate scores and signatures to trigger an integer overflow, and reveal the flag.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>H4ck1ng G00gl3 ep005 challenge 03</title><link>https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep005ch03/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/h4ck1ng-g00gl3-ep005ch03/</guid><description>Decode H4ck1ng G00gl3 ep005 challenge 03: uncover hidden Morse code in the episodes, translate it to find the secret message, and complete the series.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>Heap-based buffer overflows</title><link>https://danielorihuela.dev/blog/heap-based-buffer-overflows/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/heap-based-buffer-overflows/</guid><description>Learn how heap-based buffer overflows work and discover preventive measures to safeguard your code against them.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>How to patch a git dependency in rust with same location but different branch</title><link>https://danielorihuela.dev/blog/how-to-patch-a-git-dependency-in-rust-with-same-location-but-different-branch/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/how-to-patch-a-git-dependency-in-rust-with-same-location-but-different-branch/</guid><description>Learn to patch Rust git dependencies using different branches with the same repository.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>How to use WASM code from ClojureScript through JavaScript interop</title><link>https://danielorihuela.dev/blog/how-to-use-wasm-code-from-clojurescript-through-javascript-interop/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/how-to-use-wasm-code-from-clojurescript-through-javascript-interop/</guid><description>Learn to use WASM code in ClojureScript via JavaScript interop. Explore Rust functions, wasm-bindgen crate, and seamless integration with JS for efficient coding.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>How does Key Transparency work?</title><link>https://danielorihuela.dev/blog/key-transparency-high-level/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/key-transparency-high-level/</guid><description>How does Key Transparency secure public key distribution? Discover how protocols like CONIKS and WhatsApp&apos;s implementation tackle these challenges.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>Skip List (in Rust) explained!</title><link>https://danielorihuela.dev/blog/skip-list/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/skip-list/</guid><description>Understand Skip Lists in Rust. Simpler than balanced trees, they offer logarithmic operations but use more memory. Learn their structure and how to implement them.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>Optimize emacs start up time</title><link>https://danielorihuela.dev/blog/optimize-emacs-start-up-time/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/optimize-emacs-start-up-time/</guid><description>Frustrated with Emacs start-up times? Discover simple hacks to speed things up and enhance your workflow in this guide.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>Store shellcode in environment variable</title><link>https://danielorihuela.dev/blog/store-shellcode-in-environment-variable/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/store-shellcode-in-environment-variable/</guid><description>Learn how to store the shellcode in an environment variable and bypass size limitations in buffer overflows.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>Stack-based buffer overflows</title><link>https://danielorihuela.dev/blog/stack-based-buffer-overflows/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/stack-based-buffer-overflows/</guid><description>Learn how stack-based buffer overflows work and discover preventive measures to safeguard your code against them.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>Why the Clojure REPL is so cool</title><link>https://danielorihuela.dev/blog/why-the-clojure-repl-is-so-cool/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/why-the-clojure-repl-is-so-cool/</guid><description>Discover why the Clojure REPL experience is superior, and how to harness its power for smoother coding.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item><item><title>Write your own shellcode</title><link>https://danielorihuela.dev/blog/write-your-own-shellcode/</link><guid isPermaLink="true">https://danielorihuela.dev/blog/write-your-own-shellcode/</guid><description>Ever dreamed about being a hacker and writing your own exploits? Learn the art of crafting shellcodes and uncover their secrets.</description><author>danielorihuelarodriguez@gmail.com (Daniel Orihuela)</author></item></channel></rss>